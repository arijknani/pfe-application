apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"mysql:latest","namespace":"openshift"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mysql\")].image"}]'
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: "2024-03-15T16:58:30Z"
  generation: 3
  labels:
    app: mysql-docker
    app.kubernetes.io/component: mysql-docker
    app.kubernetes.io/instance: mysql-docker
  name: mysql-docker
  namespace: arij-project
  resourceVersion: "10905631"
  uid: 9a390b34-efc8-4e50-b3bf-d07ea0d69488
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: mysql-docker
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: mysql-docker
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: mysql-database
              name: mysql-secrets-docker
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-password
              name: mysql-secrets-docker
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-root-password
              name: mysql-secrets-docker
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: mysql-user
              name: mysql-secrets-docker
        image: image-registry.openshift-image-registry.svc:5000/openshift/mysql@sha256:605a8e4282036f70663a9b5655a37d3fc537ac423fc21af4ae9831c2577373dc
        imagePullPolicy: IfNotPresent
        name: mysql
        ports:
        - containerPort: 3306
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: Filevi 
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
